# ------------------------------------------------------------------------
# Example PTG configuration file for "selfdriving" library
# ------------------------------------------------------------------------

# Max linear vel (m/s):
@define ROBOT_MAX_V  1.0
# Max angular vel (deg/s):
@define ROBOT_MAX_W  60.0
# Max distance to "foresee" obstacles (m):
@define NAV_MAX_REF_DIST   5.0


[SelfDriving]
min_obstacles_height  = 0.0            // Minimum `z` coordinate of obstacles to be considered fo collision checking
max_obstacles_height  = 2.0            // Maximum `z` coordinate of obstacles to be considered fo collision checking

# PTGs: See classes derived from mrpt::nav::CParameterizedTrajectoryGenerator ( https://reference.mrpt.org/svn/classmrpt_1_1nav_1_1_c_parameterized_trajectory_generator.html)
# refer to papers for details.
#------------------------------------------------------------------------------
PTG_COUNT = 1

PTG0_Type        = selfdriving::ptg::HolonomicBlend
PTG0_refDistance = ${NAV_MAX_REF_DIST} # Maximum distance to build PTGs (in meters), i.e. the visibility "range" of tentative paths
PTG0_num_paths   = 191
PTG0_T_ramp_max  = 1.0 // Max duration of the velocity interpolation since a vel_cmd is issued [s].
PTG0_v_max_mps   = ${ROBOT_MAX_V}  // Maximum linear velocity for trajectories [m/s].
PTG0_w_max_dps   = ${ROBOT_MAX_W}  // Maximum angular velocity for trajectories [deg/s].
# Math expr for |V|
PTG0_expr_V      = V_MAX * trimmable_speed
# Math expr for |omega| (disregarding the sign, only the module)
PTG0_expr_W      = W_MAX * trimmable_speed * min(1.0, 0.1+abs(dir)/(10*PI/180))
# Math expr for `T_ramp`
PTG0_expr_T_ramp = T_ramp_max

# Default 2D robot shape for collision checks:
# Each PTG will use only one of either (a) polygonal 2D shape or, (b) radius of a circular shape
RobotModel_shape2D_xs=-0.2 0.1 0.1 -0.2
RobotModel_shape2D_ys=0.1 0.1 -0.1 -0.1
RobotModel_circular_shape_radius = 0.15
